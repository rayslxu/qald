import { IriTerm, VariableTerm, LiteralTerm, PropertyPath, BgpPattern, FilterPattern, UnionPattern, AggregateExpression } from 'sparqljs';
export declare function isNamedNode(node: any): node is IriTerm;
export declare function isWikidataEntityNode(node: any): node is IriTerm;
export declare function isWikidataPropertyNode(node: any, pid?: string): node is IriTerm;
export declare function isVariable(node: any): node is VariableTerm;
export declare function isLiteral(node: any): node is LiteralTerm;
export declare function isPropertyPath(node: any): node is PropertyPath;
export declare function isSequencePropertyPath(node: any): node is PropertyPath;
export declare function isUnaryPropertyPath(node: any, type?: '+' | '*' | '!'): node is PropertyPath;
export declare function isBasicGraphPattern(node: any): node is BgpPattern;
export declare function isFilterPattern(node: any): node is FilterPattern;
export declare function isUnionPattern(node: any): node is UnionPattern;
export declare function isAggregateExpression(node: any, aggregation?: string): node is AggregateExpression;
