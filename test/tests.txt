Utterance: show me all museums
Keywords: 
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>.
}
TT: 
@org.wikidata . art_museum ( ) ;

====
Utterance: show me museums named after louvre palace
Keywords: louvre palace
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>;
       <http://www.wikidata.org/prop/direct/P138> <http://www.wikidata.org/entity/Q1075988>.
}
TT: 
@org.wikidata . art_museum ( ) filter contains ( named_after , " Q1075988 " ^^org.wikidata:p_named_after ( " louvre palace " ) ) ;

====
Utterance: show me the owner of museums named after louvre palace
Keywords: louvre palace
SPARQL: 
SELECT DISTINCT ?y WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>;
       <http://www.wikidata.org/prop/direct/P138> <http://www.wikidata.org/entity/Q1075988>.
    ?x <http://www.wikidata.org/prop/direct/P127> ?y.
}
TT: 
[ owned_by ] of @org.wikidata . art_museum ( ) filter contains ( named_after , " Q1075988 " ^^org.wikidata:p_named_after ( " louvre palace " ) ) ;

====
Utterance: Who was the doctoral supervisor of Albert Einstein
Keywords: doctoral supervisor, Albert Einstein
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    <http://www.wikidata.org/entity/Q937> <http://www.wikidata.org/prop/direct/P184> ?uri
}
TT:
[ doctoral_advisor ] of @org.wikidata . human ( ) filter id == " Q937 " ^^org.wikidata:human ( " albert einstein " ) ;

====
Utterance: Did Kaurismäki ever win the Grand Prix at Cannes?
Keywords: Kaurismäki, winner, Grand Prix at Cannes
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q276186> <http://www.wikidata.org/prop/direct/P166>  <http://www.wikidata.org/entity/Q844804> . 
}
TT: 
[ contains ( award_received , " Q844804 " ^^org.wikidata:p_award_received ( " grand prix at cannes " ) ) ] of @org.wikidata . human ( ) filter id == " Q276186 " ^^org.wikidata:human ( " kaurismäki " ) ;

====
Utterance: Which countries have more than two official languages??
Keywords: country, official language, more than two
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . 
    ?uri <http://www.wikidata.org/prop/direct/P37> ?language . 
} GROUP BY ?uri HAVING(COUNT(?language)>2)
TT: 
@org.wikidata . country ( ) filter count ( official_language ) >= 2 ;

====
Utterance: What is the highest mountain in Australia?
Keywords: Australia, highest mountain
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8502> . 
    ?uri <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q3960> . 
    ?uri <http://www.wikidata.org/prop/direct/P2044> ?height. 
} ORDER BY DESC(?height) LIMIT 1
TT: 
sort ( elevation_above_sea_level desc of @org.wikidata . mountain ( ) filter contains ( continent , " Q3960 " ^^org.wikidata:p_continent ( " australia " ) ) ) [ 1 ] ;

====
Utterance: Give me all cities in New Jersey with more than 10000 inhabitants.
Keywords: New Jersey, city, inhabitants, more than 10000
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . 
    ?uri <http://www.wikidata.org/prop/direct/P131>+ <http://www.wikidata.org/entity/Q1408> . 
    ?uri <http://www.wikidata.org/prop/direct/P1082> ?population . 
    FILTER(?population > 10000) 
}
TT:
@org.wikidata . city ( ) filter contains ( located_in_the_administrative_territorial_entity , " Q1408 " ^^org.wikidata:p_located_in_the_administrative_territorial_entity ( " new jersey " ) ) && population >= 10000 ;

====
Utterance: Whose wife is called Mary?
Keywords: wife, called, Mary
SPARQL: 
SELECT DISTINCT ?uri { 
    ?uri <http://www.wikidata.org/prop/direct/P26> ?spouse .  
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?name .  
    FILTER(regex(?name,'Mary')) 
}
TT: 
@org.wikidata . entity ( ) filter contains~ ( spouse , " mary " ) ;

====
Utterance: Was the wife of president Lincoln called Mary?
Keywords: Lincoln, president, wife, called, Mary   
SPARQL: 
ASK WHERE { 
    <http://www.wikidata.org/entity/Q91> <http://www.wikidata.org/prop/direct/P26> ?spouse .  
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?name .  
    FILTER(regex(?name,'Mary')) 
}
TT: 
[ contains~ ( spouse , " mary " ) ] of @org.wikidata . human ( ) filter id == " Q91 " ^^org.wikidata:human ( " lincoln " ) ;

====
Utterance: How many countries are there in Europe ? 
Keywords: Europe, countries
SPARQL: 
SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {
     ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . 
     ?uri <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q46> . 
}
TT: 
count ( @org.wikidata . country ( ) filter contains ( continent , " Q46 " ^^org.wikidata:p_continent ( " europe " ) ) ) ;

====
Utterance: Which actors were born in Germany?
Keywords: actor, born, Germany
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q10800557> . 
    { ?uri <http://www.wikidata.org/prop/direct/P19> <http://www.wikidata.org/entity/Q183> . } UNION 
    { ?uri <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> . } 
}
TT: 
@org.wikidata . entity ( ) filter contains ( occupation , " Q10800557 " ^^org.wikidata:p_occupation ( " actors " ) ) && contains ( place_of_birth , " Q183 " ^^org.wikidata:p_place_of_birth ( " germany " ) ) ;

====
Utterance: Give me the birthdays of all actors of the television show Charmed.
Keywords: television show, Charmed, actor, birthday
SPARQL: 
SELECT DISTINCT ?date WHERE { 
    <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date .
}
TT: 
[ < cast_member / date_of_birth > ] of @org.wikidata . television_series ( ) filter id == " Q162371 " ^^org.wikidata:television_series ( " charmed " ) ;

====
Utterance: Does the Isar flow into a lake?
Keywords: Isar, flow, lake
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q106588> <http://www.wikidata.org/prop/direct/P403> ?uri . 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q23397>  . 
}
TT:
[ contains ( mouth_of_the_watercourse , any ( @org.wikidata . lake ( ) ) ) ] of @org.wikidata . river ( ) filter id == " Q106588 " ^^org.wikidata:river ( " isar " ) ;

====
Utterance: List all boardgames by GMT.
Keywords: 
SPARQL: 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . }
TT: 
@org.wikidata . board_game ( ) ;


====
Utterance: Who developed Skype?
Keywords:
SPARQL: 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q40984 wdt:P178 ?uri . }
TT: 
[ developer ] of @org.wikidata . website ( ) filter id == " Q40984 " ^^org.wikidata:website ( " skype " ) ; 

====
Utterance: Who wrote the lyrics for the Polish national anthem?
Keywords: Poland, national anthem, write, lyrics
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    <http://www.wikidata.org/entity/Q36> <http://www.wikidata.org/prop/direct/P85>/<http://www.wikidata.org/prop/direct/P676> ?uri . 
}
TT:
[ < anthem / lyrics_by > ] of @org.wikidata . sovereign_state ( ) filter id == " Q36 " ^^org.wikidata:sovereign_state ( " polish " ) ;

====
Utterance: Which writers studied in Istanbul?
Keywords: writers, studied, Istanbul
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q36180> . 
    ?uri <http://www.wikidata.org/prop/direct/P69>/<http://www.wikidata.org/prop/direct/P131>  <http://www.wikidata.org/entity/Q406> . 
}
TT:
@org.wikidata . entity ( ) filter contains ( < educated_at / located_in_the_administrative_territorial_entity > , " Q406 " ^^org.wikidata:p_located_in_the_administrative_territorial_entity ( " istanbul " ) ) && contains ( occupation , " Q36180 " ^^org.wikidata:p_occupation ( " writers " ) ) ;

====
Utterance: Which writers studied in Istanbul?
Keywords: writers, studied, Istanbul
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q36180> . 
    ?uri <http://www.wikidata.org/prop/direct/P69>/<http://www.wikidata.org/prop/direct/P131>+  <http://www.wikidata.org/entity/Q406> . 
}
TT:
@org.wikidata . entity ( ) filter contains ( < educated_at / located_in_the_administrative_territorial_entity + > , " Q406 " ^^org.wikidata:p_located_in_the_administrative_territorial_entity ( " istanbul " ) ) && contains ( occupation , " Q36180 " ^^org.wikidata:p_occupation ( " writers " ) ) ;

====
Utternace: In which city did John F. Kennedy die?
Keywords: city, John F. Kennedy, die
SPARQL:
SELECT DISTINCT ?uri WHERE {  
    <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/direct/P20>/<http://www.wikidata.org/prop/direct/P131> ?uri . 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515>  .  
} 
TT: 
[ < place_of_death / located_in_the_administrative_territorial_entity > : Entity ( org.wikidata:city ) ] of @org.wikidata . human ( ) filter id == " Q9696 " ^^org.wikidata:human ( " john f . kennedy " ) ;